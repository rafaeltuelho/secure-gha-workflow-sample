# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow lets you generate SLSA provenance file for your project.
# The generation satisfies level 3 for the provenance requirements - see https://slsa.dev/spec/v0.1/requirements
# The project is an initiative of the OpenSSF (openssf.org) and is developed at
# https://github.com/slsa-framework/slsa-github-generator.
# The provenance file can be verified using https://github.com/slsa-framework/slsa-verifier.
# For more information about SLSA and how it improves the supply-chain, visit slsa.dev.

name: Secure Build Pipeline
on:
  workflow_dispatch:
    inputs:
      checkCodeSigning:
        description: 'Check code signing using gitsigning'
        required: true
        default: false
        type: boolean
  # release:
  #   types: [created]

defaults:
  run:
    shell: bash
    working-directory: code-with-quarkus

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: 
      actions: read   # To read the workflow path.
      id-token: write # To sign the provenance.
      contents: write # To add assets to a release.    
    outputs:
      digests: ${{ steps.hash.outputs.digests }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21 (temurin)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Print Java version
        run: java -version

      - name: Build artifacts and run unit tests using Maven Wrapper
        run: |
            # Build the app using Maven
            ./mvnw clean package

      - name: Scan with Syft to generate the SBOM
        uses: anchore/sbom-action@v0
        with:
          format: spdx-json
          path: ./
          artifact-name: sbom.spdx
          output-file: ./sbom.spdx
          upload-release-assets: true
          upload-artifact: true

      - name: Publish SBOM as artifact
        uses: anchore/sbom-action/publish-sbom@v0
        with:
          sbom-artifact-match: ".*\\.spdx$"

      - name: Analyze SBOM with Bomber tool to check CVEs
        run: | 
          VERSION=0.5.0

          echo "Setting Up Bomber"
          wget --progress=bar:force:noscroll "https://github.com/devops-kung-fu/bomber/releases/download/v${VERSION}/bomber_${VERSION}_linux_amd64.deb" && sudo dpkg --install "bomber_${VERSION}_linux_amd64.deb"

          # clean up remaining package
          rm "bomber_${VERSION}_linux_amd64.deb"
          echo "Running Bomber Scan on Generated SBOM"
          pwd
          ls -la .
          bomber --severity=critical --enrich=epss scan ./sbom.spdx

      - name: Analyze SBOM with Grant tool to check Licenses
        run: | 
          echo "Setting Up Grant"
          curl -sSfL https://raw.githubusercontent.com/anchore/grant/main/install.sh | sh -s -- -b /usr/local/bin

          echo "Running Grant Scan on Generated SBOM"
          grant --show-packages --osi-approved check  ./sbom.spdx

      # - name: Release
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     files: /tmp/sbom.cyclonedx.json

  # provenance:
  #   needs: [build]
  #   permissions:
  #     actions: read   # To read the workflow path.
  #     id-token: write # To sign the provenance.
  #     contents: write # To add assets to a release.
  #   uses: slsa-framework/slsa-github-generator/.github/workflows/builder_maven_slsa3.yml@v2.0.0
  #   with:
  #     rekor-log-public: true
  #     # base64-subjects: "${{ needs.build.outputs.digests }}"
  #     # upload-assets: true # Optional: Upload to a new release
